%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.10.0.499 (R2010a). Operating System: Darwin 10.5.0 Darwin Kernel Version 10.5.0: Fri Nov  5 23:20:39 PDT 2010; root:xnu-1504.9.17~1/RELEASE_I386 i386.
%%Title: /Users/mjcarroll/devel/school/elec6230/Project/latex/efficiency.eps
%%CreationDate: 12/03/2010  05:36:30
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -21   104   634   688
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -21   104   634   688
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0252 8256 csm

    0     0  7862  6999 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 7863 7000 rf
6 w
0 5704 6093 0 0 -5704 1022 6229 4 MP
PP
-6093 0 0 5704 6093 0 0 -5704 1022 6229 5 MP stroke
4 w
DO
0 sg
1022 6229 mt 7115 6229 L
7115 6229 mt 7115 6229 L
1022 5278 mt 7115 5278 L
7115 5278 mt 7115 5278 L
1022 4327 mt 7115 4327 L
7115 4327 mt 7115 4327 L
1022 3377 mt 7115 3377 L
7115 3377 mt 7115 3377 L
1022 2426 mt 7115 2426 L
7115 2426 mt 7115 2426 L
1022 1475 mt 7115 1475 L
7115 1475 mt 7115 1475 L
SO
6 w
1022 6229 mt 7115 6229 L
1022  525 mt 7115  525 L
1022 6229 mt 1022  525 L
7115 6229 mt 7115  525 L
1022 6229 mt 7115 6229 L
1022 6229 mt 1022  525 L
1022 6229 mt 1022 6168 L
1022  525 mt 1022  585 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 989 6374 mt 
(1) s
2240 6229 mt 2240 6168 L
2240  525 mt 2240  585 L
2207 6374 mt 
(2) s
3459 6229 mt 3459 6168 L
3459  525 mt 3459  585 L
3426 6374 mt 
(3) s
4677 6229 mt 4677 6168 L
4677  525 mt 4677  585 L
4644 6374 mt 
(4) s
5896 6229 mt 5896 6168 L
5896  525 mt 5896  585 L
5863 6374 mt 
(5) s
7115 6229 mt 7115 6168 L
7115  525 mt 7115  585 L
7082 6374 mt 
(6) s
1022 6229 mt 1082 6229 L
7115 6229 mt 7054 6229 L
 854 6273 mt 
(50) s
1022 5278 mt 1082 5278 L
7115 5278 mt 7054 5278 L
 854 5322 mt 
(60) s
1022 4327 mt 1082 4327 L
7115 4327 mt 7054 4327 L
 854 4371 mt 
(70) s
1022 3377 mt 1082 3377 L
7115 3377 mt 7054 3377 L
 854 3421 mt 
(80) s
1022 2426 mt 1082 2426 L
7115 2426 mt 7054 2426 L
 854 2470 mt 
(90) s
1022 1475 mt 1082 1475 L
7115 1475 mt 7054 1475 L
 787 1519 mt 
(100) s
1022 6229 mt 7115 6229 L
1022  525 mt 7115  525 L
1022 6229 mt 1022  525 L
7115 6229 mt 7115  525 L
gs 1022 525 6094 5705 rc
/c8 { 0.000000 0.498039 0.000000 sr} bdef
c8
1219 432 1219 21 1218 -21 1219 109 1218 22 1022 1475 6 MP stroke
gr

c8
gs 949 1402 6240 710 rc
  36   36 1022 1475 FO
  36   36 2240 1497 FO
  36   36 3459 1606 FO
  36   36 4677 1585 FO
  36   36 5896 1606 FO
  36   36 7115 2038 FO
gr

gs 1022 525 6094 5705 rc
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
1219 77 1219 -18 1218 84 1219 163 1218 2428 1022 1475 6 MP stroke
gr

c9
gs 949 1402 6240 2881 rc
0 j
0 -58 -58 0 0 58 58 0 993 1446 5 MP
DP
0 -58 -58 0 0 58 58 0 2211 3874 5 MP
DP
0 -58 -58 0 0 58 58 0 3430 4037 5 MP
DP
0 -58 -58 0 0 58 58 0 4648 4121 5 MP
DP
0 -58 -58 0 0 58 58 0 5867 4103 5 MP
DP
0 -58 -58 0 0 58 58 0 7086 4180 5 MP
DP
gr

gs 1022 525 6094 5705 rc
gr

0 sg
3207 6517 mt 
(Number of Processing Elements) s
 705 3705 mt  -90 rotate
(% Efficiency) s
90 rotate
3253  430 mt 
(Comparison of Efficiency Plots) s
1005 6272 mt 
( ) s
7099  567 mt 
( ) s
1 sg
0 334 1526 0 0 -334 5530 919 4 MP
PP
-1526 0 0 334 1526 0 0 -334 5530 919 5 MP stroke
4 w
DO
SO
6 w
0 sg
5530  919 mt 7056  919 L
5530  585 mt 7056  585 L
5530  919 mt 5530  585 L
7056  919 mt 7056  585 L
5530  919 mt 7056  919 L
5530  919 mt 5530  585 L
5530  919 mt 7056  919 L
5530  585 mt 7056  585 L
5530  919 mt 5530  585 L
7056  919 mt 7056  585 L
6000  720 mt 
(OpenMP Efficiency) s
gs 5530 585 1527 335 rc
c8
361 0 5602 678 2 MP stroke
gs 5709 605 147 147 rc
  36   36 5782  678 FO
gr

gr

c8
0 sg
6000  869 mt 
(MPI Efficiency) s
gs 5530 585 1527 335 rc
c9
361 0 5602 825 2 MP stroke
gs 5709 752 147 147 rc
0 j
0 -58 -58 0 0 58 58 0 5753 796 5 MP
DP
gr

gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
